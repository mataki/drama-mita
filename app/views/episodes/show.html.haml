- drama_title_image(@episode.drama)
- title "#{h @episode.num}話 #{h @episode.title}"

#self_list{:style => "background-color: #fee;"}
  .title2{:style => "background-color: #fcc; text-align:center", :align => "center"} あなたの見た&#xE702;
  - if self_watch = @episode.watches.find_by_user_id(current_user.id)
    = render :partial => "watches/watch", :locals => {:hide_content => true, :watch => self_watch}
    - form_for(self_watch) do |f|
      %p
        = f.label :content, "コメント"
        = f.text_field :content
        絵文字が利用できます。
      %p
        = f.submit "更新"
    - form_for(self_watch, :url => watch_path(self_watch), :html => {:method => "delete"}) do |f|
      %p
        = f.submit "削除"
  - else
    %p
      まだ登録されていません。もしあなたの見ているドラマであれば見たボタンを押しましょう！
    - form_for(@episode.watches.build) do |f|
      = f.hidden_field :episode_id
      %p
        = f.label :content, "コメント"
        = f.text_field :content
      %p
        = f.submit "見た&#xE702;"

#friends_list{:style => "background-color: #eef;"}
  .title2{:style => "background-color: #ccf; text-align:center", :align => "center"} マイミクの見た&#xE702;
  - friends_watches = @episode.watches.friends(current_user).all(:limit => 3, :include => [:user, {:episode => :drama} ])
  - unless friends_watches.blank?
    - friends_watches.each do |watch|
      = render watch
  - else
    %p
      まだマイミクの誰も見ていないお話です。

#others_list{:style => "background-color: #ffe;"}
  .title2{:style => "background-color: #ffc; text-align:center", :align => "center"} みんなの見た&#xE702;
  - others_watches = @episode.watches.user_id_is_not(current_user.id).all(:limit => 3, :include => [:user, {:episode => :drama} ])
  - unless others_watches.blank?
    - others_watches.each do |watch|
      = render watch
    = link_to "他のコメントを見る", [@episode, :watches]
  - else
    %p
      まだ登録されていません。
